{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10211,"databundleVersionId":111096,"sourceType":"competition"},{"sourceId":15520,"sourceType":"datasetVersion","datasetId":11167},{"sourceId":38454,"sourceType":"datasetVersion","datasetId":2709}],"dockerImageVersionId":30786,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/shanaiadsilva/housingprices?scriptVersionId=205886758\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# Code you have previously used to load data\nimport pandas as pd\n\n# Path of the file to read\niowa_file_path = '/kaggle/input/home-data-for-ml-course/train.csv'\n\nhome_data = pd.read_csv(iowa_file_path)\n\n# Set up code checking\n# from learntools.core import binder\n# binder.bind(globals())\n# from learntools.machine_learning.ex3 import *\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.814254Z","iopub.execute_input":"2024-11-07T05:03:39.814784Z","iopub.status.idle":"2024-11-07T05:03:39.852563Z","shell.execute_reply.started":"2024-11-07T05:03:39.814739Z","shell.execute_reply":"2024-11-07T05:03:39.851304Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# print the list of columns in the dataset to find the name of the prediction target\nprint(home_data.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.854742Z","iopub.execute_input":"2024-11-07T05:03:39.855125Z","iopub.status.idle":"2024-11-07T05:03:39.86154Z","shell.execute_reply.started":"2024-11-07T05:03:39.855085Z","shell.execute_reply":"2024-11-07T05:03:39.860332Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y = home_data['SalePrice']\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.862741Z","iopub.execute_input":"2024-11-07T05:03:39.863105Z","iopub.status.idle":"2024-11-07T05:03:39.876266Z","shell.execute_reply.started":"2024-11-07T05:03:39.863066Z","shell.execute_reply":"2024-11-07T05:03:39.874806Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Create the list of features below\nfeature_names = ['LotArea','YearBuilt','1stFlrSF','2ndFlrSF','FullBath','BedroomAbvGr','TotRmsAbvGrd']\n\n# Select data corresponding to features in feature_names\nX = home_data[feature_names]\nprint(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.87963Z","iopub.execute_input":"2024-11-07T05:03:39.880136Z","iopub.status.idle":"2024-11-07T05:03:39.897045Z","shell.execute_reply.started":"2024-11-07T05:03:39.880082Z","shell.execute_reply":"2024-11-07T05:03:39.895645Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Review data\n# print description or statistics from X\nprint(\"## Review data from X: \\n\",X)\nprint(\"## print description or statistics from X:\\n\", X.describe())\n# print the top few lines\nprint(\"##top few lines:\\n\", X.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.898832Z","iopub.execute_input":"2024-11-07T05:03:39.899367Z","iopub.status.idle":"2024-11-07T05:03:39.939474Z","shell.execute_reply.started":"2024-11-07T05:03:39.899304Z","shell.execute_reply":"2024-11-07T05:03:39.938313Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# from _ import _\nfrom sklearn.tree import DecisionTreeRegressor\n#specify the model. \n#For model reproducibility, set a numeric value for random_state when specifying the model\niowa_model = DecisionTreeRegressor(random_state=1)\n\n# Fit the model\niowa_model.fit(X, y)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.94118Z","iopub.execute_input":"2024-11-07T05:03:39.941692Z","iopub.status.idle":"2024-11-07T05:03:39.963073Z","shell.execute_reply.started":"2024-11-07T05:03:39.941637Z","shell.execute_reply":"2024-11-07T05:03:39.961831Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(X.head())\npredictions = iowa_model.predict(X)\nprint(predictions)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.964877Z","iopub.execute_input":"2024-11-07T05:03:39.965252Z","iopub.status.idle":"2024-11-07T05:03:39.978049Z","shell.execute_reply.started":"2024-11-07T05:03:39.965214Z","shell.execute_reply":"2024-11-07T05:03:39.97666Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# You can write code in this cell\nprint(y.head())\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-07T05:03:39.97977Z","iopub.execute_input":"2024-11-07T05:03:39.980264Z","iopub.status.idle":"2024-11-07T05:03:39.99161Z","shell.execute_reply.started":"2024-11-07T05:03:39.98021Z","shell.execute_reply":"2024-11-07T05:03:39.990214Z"}},"outputs":[],"execution_count":null}]}